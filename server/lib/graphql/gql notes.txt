notes
──────────────────────────────────────────────────────────────────────────────────
1. types -> GraphQLObjectType
ex = {
    name ...,
    fields {
        age: { type: }
    }
}

2. resolver function -> go into DB to find data
resolve(parentValue, args) {
    args -> query parementers (args on query)
}

3. resolvers = promises 

4. parentValue = primary (key) object 


querying
──────────────────────────────────────────────────────────────────────────────────
single root query 

alias: aliasName - multiple queries of same node 

fragment queryFrag on Table - avoid duplicate property listing

questions
? use axios for promises (fetch) requrests ???
? use cors???


mutation
──────────────────────────────────────────────────────────────────────────────────
mutation {
    addUser(args) {
        return args ... 
    }
}

put vs patch:
put = completely replace, overriding 
patch = update only specific fields
